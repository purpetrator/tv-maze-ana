{"version":3,"sources":["components/ResultCard/index.js","components/Nav/index.js","index.js"],"names":["ResultCard","props","trimmedSummary","summary","replace","summaryText","length","substring","className","src","image","alt","name","type","id","onClick","alert","Nav","App","useState","shows","setShows","query","setQuery","handleApiCall","a","axios","get","response","data","onSubmit","evt","preventDefault","icon","faSearch","value","onChange","e","target","placeholder","map","show","index","medium","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4NA6BeA,MA3Bf,SAAoBC,GAClB,IAAMC,EAAiBD,EAAME,QAAQC,QAAQ,gBAAiB,IACxDC,EACJH,EAAeI,OAAS,IAAxB,UACOJ,EAAeK,UAAU,EAAG,KADnC,QAEIL,EAMN,OACE,sBAAKM,UAAU,OAAf,UACE,qBAAKC,IAAKR,EAAMS,MAAOF,UAAU,eAAeG,IAAKV,EAAMW,OAC3D,sBAAKJ,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BP,EAAMW,OAClC,qBAAKJ,UAAU,cAAf,SACE,mBAAGA,UAAU,4BAAb,SAA0CH,MAE5C,wBAAQQ,KAAK,SAASL,UAAU,MAAMM,GAAG,SAASC,QAZrC,WACjBC,MAAM,iBAWF,kCCTOC,MAVf,SAAahB,GACX,OACE,qBAAKO,UAAU,SAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uBAAhB,8B,gBCGR,SAASU,IAAO,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAIPC,EAAa,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAC3B,yCAA2CL,GAFzB,OACdM,EADc,OAIpBP,EAASO,EAASC,MAJE,2CAAH,qDAOnB,OACE,gCACE,cAAC,EAAD,IACA,sBAAKrB,UAAU,UAAf,UACE,uBACEA,UAAU,YACVsB,SAAU,SAACC,GACTA,EAAIC,iBACJR,KAJJ,UAOE,sBAAKhB,UAAU,aAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAAiByB,KAAMC,QAEzB,uBACErB,KAAK,OACLsB,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOH,QACnCI,YAAY,2BAGhB,wBAAQ1B,KAAK,SAASL,UAAU,MAAMM,GAAG,YAAzC,uBAKF,qBAAKN,UAAU,QAAf,SACGY,EAAMoB,KAAI,SAACC,EAAMC,GAChB,OACE,qBACElC,UAAU,WACVM,GAAE,UAAK4B,EAAL,YAAcD,EAAKA,KAAK7B,MAF5B,SAKG6B,EAAKA,KAAK/B,OAAS+B,EAAKA,KAAKtC,QAC5B,cAAC,EAAD,CACES,KAAM6B,EAAKA,KAAK7B,KAChBT,QAASsC,EAAKA,KAAKtC,QACnBO,MAAO+B,EAAKA,KAAK/B,MAAMiC,SAEvB,MAXN,UAGUD,EAHV,YAGmBD,EAAKA,KAAK7B,kBAkB3C,IAAMgC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.dcd9c709.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ResultCard(props) {\n  const trimmedSummary = props.summary.replace(/(<([^>]+)>)/gi, \"\");\n  const summaryText =\n    trimmedSummary.length > 275\n      ? `${trimmedSummary.substring(0, 275)} ...`\n      : trimmedSummary;\n\n  const clickAlert = () => {\n    alert(\"Coming Soon!\");\n  };\n\n  return (\n    <div className=\"card\">\n      <img src={props.image} className=\"card-img-top\" alt={props.name} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.name}</h5>\n        <div className=\"summaryText\">\n          <p className=\"card-text overflow-hidden\">{summaryText}</p>\n        </div>\n        <button type=\"button\" className=\"btn\" id=\"epiBtn\" onClick={clickAlert}>\n          Show Episodes\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResultCard;\n","import React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">Show Finder</span>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport ResultCard from \"./components/ResultCard/index\";\nimport Nav from \"./components/Nav/index\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [shows, setShows] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const handleApiCall = async () => {\n    const response = await axios.get(\n      \"https://api.tvmaze.com/search/shows?q=\" + query\n    );\n    setShows(response.data);\n  };\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"mainDiv\">\n        <form\n          className=\"searchBar\"\n          onSubmit={(evt) => {\n            evt.preventDefault();\n            handleApiCall();\n          }}\n        >\n          <div className=\"inputField\">\n            <button className=\"searchIcon\">\n              <FontAwesomeIcon icon={faSearch} />\n            </button>\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Search TV Show here\"\n            />\n          </div>\n          <button type=\"button\" className=\"btn\" id=\"searchBtn\">\n            Search\n          </button>\n        </form>\n\n        <div className=\"shows\">\n          {shows.map((show, index) => {\n            return (\n              <div\n                className=\"cardsDiv\"\n                id={`${index} ${show.show.name}`}\n                key={`${index} ${show.show.name}`}\n              >\n                {show.show.image && show.show.summary ? (\n                  <ResultCard\n                    name={show.show.name}\n                    summary={show.show.summary}\n                    image={show.show.image.medium}\n                  />\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}